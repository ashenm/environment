#!/usr/bin/env sh

# errexit
set -e

# script metadata
TRAVIS_SCRIPTS="$(realpath $(dirname $0))"

# clinch default permissions
umask 077

# ensure requisites
test -n "$SIGNATURE_PASSPHRASE" && test -n "$SIGNATURE_REFERENCE" && \
  test -n "$SSH_PXF_PASSPHRASE" || { echo >&2 "Missing required parameter(s)"; exit 1; }

# decrypt armour on ci
test -z "$CI" || \
  openssl aes-256-cbc -K $encrypted_1af65ac72a6a_key -iv $encrypted_1af65ac72a6a_iv -in armours.tar.enc -out armours.tar -d

# extract armour archive
tar --extract --verbose --file armours.tar

# clinch armour permissions
chmod 600 launchpad launchpad.pub

# install requisites
sudo apt update && \
  sudo apt install --yes gnupg2 openssh-client

# enable internal cache seeding
mkdir --parent --mode 700 "$HOME/.gnupg" && \
  echo "allow-preset-passphrase" | tee --append "$HOME/.gnupg/gpg-agent.conf"

# reload gpg-agent
gpg-connect-agent reloadagent /bye

# ensure ssh-agent running
test -n "$SSH_AGENT_PID" || \
  eval $(ssh-agent)

# import private keys
echo "${SIGNATURE_PASSPHRASE}" | gpg2 --batch --import --passphrase-fd 0 launchpad.asc
echo "${SSH_PXF_PASSPHRASE}" | DISPLAY= SSH_ASKPASS="$TRAVIS_SCRIPTS/echo" ssh-add -t 1h ${TRAVIS_BUILD_DIR:-$PWD}/launchpad

# cache key passphrase
echo "$SIGNATURE_PASSPHRASE" | /usr/lib/gnupg2/gpg-preset-passphrase --verbose \
  --preset "$(gpg2 --with-keygrip --list-secret-keys $SIGNATURE_REFERENCE | awk -F'= ' '/ +Keygrip/ { print $2; exit }')"

# make imported key default
echo "default-key $(gpg --list-keys --keyid-format 0xlong $SIGNATURE_REFERENCE | \
  awk '/^pub/ { sub(/^.+\//, "", $2); print $2; exit }')" | tee --append $HOME/.gnupg/gpg.conf

# ultimate trust imported key
gpg --edit-key --command-fd 0 $SIGNATURE_REFERENCE trust <<EOF
5
y
EOF

# configure ssh client for sftp usage
mkdir --parent --mode 700 $HOME/.ssh
cat >> $HOME/.ssh/config <<EOF
Host ppa.launchpad.net
    Hostname ppa.launchpad.net
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
    IdentityFile "${TRAVIS_BUILD_DIR:-$PWD}/launchpad"
EOF

# assess success
echo "assessment" | gpg2 --yes --batch --encrypt --always-trust \
  --recipient "$SIGNATURE_REFERENCE" --output /dev/null

# output for debugging
gpg --list-public-keys | grep --color=never uid
ssh-add -l | awk '{ print $1, $3 }'

# default gnupg2
git config gpg.program gpg2

# configure dput
cat 1> $HOME/.dput.cf <<EOF
[upstream]
fqdn = ppa.launchpad.net
method = sftp
incoming = ~ashenm/ubuntu/ppa/
login = ashenm
allow_unsigned_uploads = 0
EOF

# vim: set expandtab shiftwidth=2 syntax=sh:
